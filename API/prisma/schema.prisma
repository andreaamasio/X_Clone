// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  username     String    @unique
  name         String
  bio          String?
  profileImage String? // URL to avatar (Gravatar or uploaded)
  password     String
  createdAt    DateTime  @default(now())
  posts        Post[]    @relation("UserPosts")
  comments     Comment[]
  likes        Like[]
  following    Follow[]  @relation("Following") // who the user follows
  followers    Follow[]  @relation("Followers") // who follows the user
}

model Post {
  id        String    @id @default(cuid())
  content   String
  image     String? // Optional image URL
  author    User      @relation("UserPosts", fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime  @default(now())
  comments  Comment[]
  likes     Like[]
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
}

model Like {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId String

  @@unique([userId, postId]) // Prevent duplicate likes
}

model Follow {
  id          String @id @default(cuid())
  follower    User   @relation("Following", fields: [followerId], references: [id])
  followerId  String
  following   User   @relation("Followers", fields: [followingId], references: [id])
  followingId String

  createdAt DateTime @default(now())

  @@unique([followerId, followingId]) // Prevent duplicate follows
}
